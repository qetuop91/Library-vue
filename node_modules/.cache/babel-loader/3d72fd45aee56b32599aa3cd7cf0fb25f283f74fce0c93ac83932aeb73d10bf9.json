{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nimport { checkAdmin } from \"@/utils/check\";\nimport { getToken } from \"@/utils/auth\";\nexport default {\n  name: 'EditBook',\n  data() {\n    return {\n      headerObj: {\n        Authorization: getToken()\n      },\n      getAdminToken: getToken(),\n      form: {\n        score: 10,\n        nums: 0\n      },\n      categories: [],\n      rules: {\n        bookName: [{\n          required: true,\n          message: '请输入书籍名称',\n          trigger: 'blur'\n        }],\n        // description: [\n        //   {required: true, message: '请输入书籍描述', trigger: 'blur'}\n        // ],\n        // publishDate: [\n        //   {required: true, message: '请选择书籍出版日期', trigger: 'blur'}\n        // ],\n        // author: [\n        //   {required: true, message: '请输入书籍作者', trigger: 'blur'}\n        // ],\n        // publish: [\n        //   {required: true, message: '请输入书籍出版社', trigger: 'blur'}\n        // ],\n        // categories: [\n        //   {required: true, message: '请选择书籍分类', trigger: 'blur'}\n        // ],\n        bookNumber: [{\n          required: true,\n          message: '请输入书籍标准码',\n          trigger: 'blur'\n        }],\n        // cover: [\n        //   {required: true, message: '请输入书籍封面', trigger: 'blur'}\n        // ],\n        score: [{\n          required: true,\n          message: '请输入书籍积分',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    checkAdmin();\n    const id = this.$route.query.id;\n    request.get(\"/book/\" + id).then(res => {\n      console.log(res);\n      this.form = res.data;\n      if (this.form.category) {\n        this.form.categories = this.form.category.split(' > ');\n        console.log(this.form.categories);\n      }\n    });\n    request.get('/book/tree').then(res => {\n      console.log(res);\n      this.categories = res.data;\n    });\n  },\n  methods: {\n    save() {\n      request.put('/book/update', this.form).then(res => {\n        console.log(res);\n        if (res.code === 200) {\n          this.$notify.success('更新成功');\n          this.$router.push('/bookList');\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    handleCoverSuccess(res) {\n      console.log('handleSuccess: ', res);\n      let imgUrl = '';\n      if (res.code === 200) {\n        imgUrl = res.data + '?token=' + getToken();\n        console.log(imgUrl);\n        this.$set(this.form, 'cover', imgUrl);\n        // this.form.cover = imgUrl\n      }\n    }\n  }\n};","map":{"version":3,"names":["request","checkAdmin","getToken","name","data","headerObj","Authorization","getAdminToken","form","score","nums","categories","rules","bookName","required","message","trigger","bookNumber","created","id","$route","query","get","then","res","console","log","category","split","methods","save","put","code","$notify","success","$router","push","error","msg","handleCoverSuccess","imgUrl","$set"],"sources":["src/views/book/EditBook.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 70%\">\r\n    <h2 style=\"margin-bottom: 30px\">编辑书籍信息</h2>\r\n    <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n      <el-form-item label=\"书籍名称\" prop=\"bookName\">\r\n        <el-input v-model=\"form.bookName\" placeholder=\"请输入书籍名称\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"描述\" prop=\"description\">\r\n        <el-input type=\"textarea\" style=\"width: 500px\" v-model=\"form.description\" placeholder=\"请输入描述\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"出版日期\" prop=\"publishDate\">\r\n        <el-date-picker\r\n            v-model=\"form.publishDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择出版日期\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item label=\"作者\" prop=\"author\">\r\n        <el-input v-model=\"form.author\" placeholder=\"请输入作者\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"出版社\" prop=\"publish\">\r\n        <el-input v-model=\"form.publish\" placeholder=\"请输入出版社\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"分类\" prop=\"categories\">\r\n        <el-cascader\r\n            style=\"width: 220px\"\r\n            :props=\"{value:'categoryName', label:'categoryName'}\"\r\n            v-model=\"form.categories\"\r\n            :options=\"categories\"></el-cascader>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍标准码\" prop=\"bookNumber\">\r\n        <el-input v-model=\"form.bookNumber\" placeholder=\"请输入书籍标准码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍积分\" prop=\"score\">\r\n        <el-input-number v-model=\"form.score\" :min=\"10\" :max=\"30\" label=\"所需积分\"></el-input-number>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍数量\" prop=\"nums\">\r\n        <el-input-number v-model=\"form.nums\" :min=\"0\" label=\"请输入书籍数量\"></el-input-number>\r\n      </el-form-item>\r\n      <br>\r\n      <el-form-item label=\"封面\" prop=\"cover\">\r\n        <!-- 这里的action根据tomcat和本机部署进行切换 -->\r\n<!--            :action=\"'http://localhost:8080/api/book/upload?token=' + getAdminToken\"-->\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            :action=\"'http://10.23.127.99:8080/LibraryManagement/api/book/upload?token=' + getAdminToken\"\r\n            :show-file-list=\"false\"\r\n            :auto-upload=\"true\"\r\n            :on-success=\"handleCoverSuccess\"\r\n            :headers=\"headerObj\"\r\n        >\r\n          <img v-if=\"form.cover\" :src=\"form.cover\" class=\"avatar\">\r\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </el-upload>\r\n\r\n      </el-form-item>\r\n      <div style=\"text-align: center; margin-top: 30px\">\r\n        <el-button type=\"primary\" @click=\"save\" size=\"medium\">提交</el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport {checkAdmin} from \"@/utils/check\";\r\nimport {getToken} from \"@/utils/auth\";\r\n\r\nexport default {\r\n  name: 'EditBook',\r\n  data() {\r\n    return {\r\n      headerObj:{\r\n        Authorization: getToken()\r\n      },\r\n      getAdminToken: getToken(),\r\n      form: {\r\n        score: 10,\r\n        nums: 0\r\n      },\r\n      categories: [],\r\n      rules: {\r\n        bookName: [\r\n          {required: true, message: '请输入书籍名称', trigger: 'blur'}\r\n        ],\r\n        // description: [\r\n        //   {required: true, message: '请输入书籍描述', trigger: 'blur'}\r\n        // ],\r\n        // publishDate: [\r\n        //   {required: true, message: '请选择书籍出版日期', trigger: 'blur'}\r\n        // ],\r\n        // author: [\r\n        //   {required: true, message: '请输入书籍作者', trigger: 'blur'}\r\n        // ],\r\n        // publish: [\r\n        //   {required: true, message: '请输入书籍出版社', trigger: 'blur'}\r\n        // ],\r\n        // categories: [\r\n        //   {required: true, message: '请选择书籍分类', trigger: 'blur'}\r\n        // ],\r\n        bookNumber: [\r\n          {required: true, message: '请输入书籍标准码', trigger: 'blur'}\r\n        ],\r\n        // cover: [\r\n        //   {required: true, message: '请输入书籍封面', trigger: 'blur'}\r\n        // ],\r\n        score: [\r\n          {required: true, message: '请输入书籍积分', trigger: 'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    checkAdmin()\r\n    const id = this.$route.query.id\r\n    request.get(\"/book/\" + id).then(res => {\r\n      console.log(res)\r\n      this.form = res.data\r\n      if (this.form.category) {\r\n        this.form.categories = this.form.category.split(' > ')\r\n        console.log(this.form.categories)\r\n      }\r\n    })\r\n    request.get('/book/tree').then(res => {\r\n      console.log(res)\r\n      this.categories = res.data\r\n    })\r\n  },\r\n  methods: {\r\n    save() {\r\n      request.put('/book/update', this.form).then(res => {\r\n        console.log(res)\r\n        if (res.code === 200) {\r\n          this.$notify.success('更新成功')\r\n          this.$router.push('/bookList')\r\n        } else {\r\n          this.$notify.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleCoverSuccess(res) {\r\n      console.log('handleSuccess: ', res)\r\n      let imgUrl = ''\r\n      if (res.code === 200) {\r\n        imgUrl = res.data + '?token=' + getToken()\r\n        console.log(imgUrl)\r\n        this.$set(this.form, 'cover', imgUrl)\r\n        // this.form.cover = imgUrl\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":";AAgEA,OAAAA,OAAA;AACA,SAAAC,UAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,aAAA,EAAAJ,QAAA;MACA;MACAK,aAAA,EAAAL,QAAA;MACAM,IAAA;QACAC,KAAA;QACAC,IAAA;MACA;MACAC,UAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC,UAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA;QACA;QACA;QACAP,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACAjB,UAAA;IACA,MAAAkB,EAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;IACAnB,OAAA,CAAAsB,GAAA,YAAAH,EAAA,EAAAI,IAAA,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,KAAAhB,IAAA,GAAAgB,GAAA,CAAApB,IAAA;MACA,SAAAI,IAAA,CAAAmB,QAAA;QACA,KAAAnB,IAAA,CAAAG,UAAA,QAAAH,IAAA,CAAAmB,QAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,MAAAlB,IAAA,CAAAG,UAAA;MACA;IACA;IACAX,OAAA,CAAAsB,GAAA,eAAAC,IAAA,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,KAAAb,UAAA,GAAAa,GAAA,CAAApB,IAAA;IACA;EACA;EACAyB,OAAA;IACAC,KAAA;MACA9B,OAAA,CAAA+B,GAAA,sBAAAvB,IAAA,EAAAe,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,IAAAA,GAAA,CAAAQ,IAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA,KAAAH,OAAA,CAAAI,KAAA,CAAAb,GAAA,CAAAc,GAAA;QACA;MACA;IACA;IACAC,mBAAAf,GAAA;MACAC,OAAA,CAAAC,GAAA,oBAAAF,GAAA;MACA,IAAAgB,MAAA;MACA,IAAAhB,GAAA,CAAAQ,IAAA;QACAQ,MAAA,GAAAhB,GAAA,CAAApB,IAAA,eAAAF,QAAA;QACAuB,OAAA,CAAAC,GAAA,CAAAc,MAAA;QACA,KAAAC,IAAA,MAAAjC,IAAA,WAAAgC,MAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}