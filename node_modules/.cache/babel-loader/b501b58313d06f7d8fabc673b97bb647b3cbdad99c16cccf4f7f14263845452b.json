{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/esnext.array-buffer.detached.js\");\nrequire(\"core-js/modules/esnext.array-buffer.transfer.js\");\nrequire(\"core-js/modules/esnext.array-buffer.transfer-to-fixed-length.js\");\nexports.__esModule = true;\nexports.isDefined = exports.isUndefined = exports.isFunction = undefined;\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isHtmlElement = isHtmlElement;\nvar _vue = require('vue');\nvar _vue2 = _interopRequireDefault(_vue);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\nfunction isObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\nfunction isHtmlElement(node) {\n  return node && node.nodeType === Node.ELEMENT_NODE;\n}\n\n/**\n *  - Inspired:\n *    https://github.com/jashkenas/underscore/blob/master/modules/isFunction.js\n */\nvar isFunction = function isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n};\nif (typeof /./ !== 'function' && (typeof Int8Array === 'undefined' ? 'undefined' : _typeof(Int8Array)) !== 'object' && (_vue2.default.prototype.$isServer || typeof document.childNodes !== 'function')) {\n  exports.isFunction = isFunction = function isFunction(obj) {\n    return typeof obj === 'function' || false;\n  };\n}\nexports.isFunction = isFunction;\nvar isUndefined = exports.isUndefined = function isUndefined(val) {\n  return val === void 0;\n};\nvar isDefined = exports.isDefined = function isDefined(val) {\n  return val !== undefined && val !== null;\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}