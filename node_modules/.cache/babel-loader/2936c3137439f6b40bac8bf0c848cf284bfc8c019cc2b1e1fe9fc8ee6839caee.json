{"ast":null,"code":"import request from \"@/utils/request\";\nimport { checkAdmin } from \"@/utils/check\";\nimport axios from \"axios\";\nexport default {\n  name: 'AddBook',\n  data() {\n    const token = localStorage.getItem('token');\n    return {\n      dialogOfUpload: false,\n      fileList: [],\n      getAdminToken: localStorage.getItem('token'),\n      headers: {\n        'token': token,\n        'Authorization': 'Bearer ' + token,\n        'Content-Type': 'multipart/form-data'\n      },\n      form: {\n        score: 10,\n        nums: 1\n      },\n      categories: [],\n      rules: {\n        bookName: [{\n          required: true,\n          message: '请输入书籍名称',\n          trigger: 'blur'\n        }],\n        // description: [\n        //   {required: true, message: '请输入书籍描述', trigger: 'blur'}\n        // ],\n        // publishDate: [\n        //   {required: true, message: '请选择书籍出版日期', trigger: 'blur'}\n        // ],\n        // author: [\n        //   {required: true, message: '请输入书籍作者', trigger: 'blur'}\n        // ],\n        // publish: [\n        //   {required: true, message: '请输入书籍出版社', trigger: 'blur'}\n        // ],\n        // categories: [\n        //   {required: true, message: '请选择书籍分类', trigger: 'blur'}\n        // ],\n        bookNumber: [{\n          required: true,\n          message: '请输入书籍标准码',\n          trigger: 'blur'\n        }],\n        nums: [{\n          required: true,\n          message: '请输入书籍数量',\n          trigger: 'blur'\n        }],\n        // cover: [\n        //   {required: true, message: '请输入书籍封面', trigger: 'blur'}\n        // ],\n        score: [{\n          required: true,\n          message: '请输入书籍积分',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    checkAdmin();\n    console.log(this.getAdminToken);\n    request.get('/book/tree', {\n      headers: {\n        'Authorization': 'Bearer ' + this.getAdminToken,\n        'token': this.getAdminToken,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      this.categories = res.data;\n    });\n  },\n  methods: {\n    save() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          request.post('/book/save', this.form).then(res => {\n            console.log(this.form);\n            if (res.code === 200) {\n              this.$notify.success('新增成功');\n              this.$refs['ruleForm'].resetFields();\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handleCoverSuccess(res) {\n      if (res.code === 200) {\n        this.$set(this.form, 'cover', res.data);\n      }\n    },\n    handleChange(file, fileList) {\n      //文件数量改变\n      this.fileList = fileList;\n    },\n    confirmUpload() {\n      //确认上传\n      var param = new FormData();\n      this.fileList.forEach((val, index) => {\n        param.append(\"file\", val.raw);\n      });\n      request.post(\"/book/upload\", param).then(res => {\n        if (res.code === 200) {\n          console.log(res);\n        }\n      });\n      this.$message({\n        message: \"上传成功！\",\n        duration: 1000\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","checkAdmin","axios","name","data","token","localStorage","getItem","dialogOfUpload","fileList","getAdminToken","headers","form","score","nums","categories","rules","bookName","required","message","trigger","bookNumber","created","console","log","get","then","res","methods","save","$refs","validate","valid","post","code","$notify","success","resetFields","error","msg","handleCoverSuccess","$set","handleChange","file","confirmUpload","param","FormData","forEach","val","index","append","raw","$message","duration"],"sources":["src/views/book/AddBook.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 70%\">\r\n    <h2 style=\"margin-bottom: 30px\">新增书籍</h2>\r\n    <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\">\r\n\r\n      <el-form-item label=\"书籍名称\" prop=\"bookName\">\r\n        <el-input v-model=\"form.bookName\" placeholder=\"请输入书籍名称\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"描述\" prop=\"description\">\r\n        <el-input type=\"textarea\" style=\"width: 500px\" v-model=\"form.description\" placeholder=\"请输入描述\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"出版日期\" prop=\"publishDate\">\r\n        <el-date-picker\r\n            v-model=\"form.publishDate\"\r\n            type=\"date\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            placeholder=\"选择出版日期\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item label=\"作者\" prop=\"author\">\r\n        <el-input v-model=\"form.author\" placeholder=\"请输入作者\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"出版社\" prop=\"publish\">\r\n        <el-input v-model=\"form.publish\" placeholder=\"请输入出版社\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"分类\" prop=\"categories\">\r\n        <el-cascader\r\n            style=\"width: 220px\"\r\n            :props=\"{value:'categoryName', label:'categoryName'}\"\r\n            v-model=\"form.categories\"\r\n            :options=\"categories\"></el-cascader>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍标准码\" prop=\"bookNumber\">\r\n        <el-input v-model=\"form.bookNumber\" placeholder=\"请输入书籍标准码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍积分\" prop=\"score\">\r\n        <el-input-number v-model=\"form.score\" :min=\"10\" :max=\"30\" label=\"所需积分\"></el-input-number>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍数量\" prop=\"nums\">\r\n        <el-input-number v-model=\"form.nums\" :min=\"0\" :max=\"1000\" label=\"请输入书籍数量\"></el-input-number>\r\n      </el-form-item>\r\n      <br>\r\n\r\n      <el-form-item label=\"封面\" prop=\"cover\">\r\n        <el-upload class=\"upload-demo\" action=\"#\" drag multiple :headers=\"headers\" :auto-upload=\"true\"\r\n                   :file-list=\"fileList\" :on-change=\"handleChange\">\r\n          <i class=\"el-icon-upload\"></i>\r\n          <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n          <div class=\"el-upload__tip\" slot=\"tip\">上传Excel格式文件</div>\r\n        </el-upload>\r\n      </el-form-item>\r\n\r\n\r\n      <div style=\"text-align: center; margin-top: 30px\">\r\n        <el-button type=\"primary\" @click=\"save\" size=\"medium\">提交</el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport {checkAdmin} from \"@/utils/check\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'AddBook',\r\n  data() {\r\n    const token =  localStorage.getItem('token')\r\n    return {\r\n      dialogOfUpload: false,\r\n      fileList: [],\r\n      getAdminToken: localStorage.getItem('token'),\r\n      headers: {\r\n        'token': token,\r\n        'Authorization': 'Bearer '+token,\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      form: {\r\n        score: 10,\r\n        nums: 1\r\n      },\r\n      categories: [],\r\n      rules: {\r\n        bookName: [\r\n          {required: true, message: '请输入书籍名称', trigger: 'blur'}\r\n        ],\r\n        // description: [\r\n        //   {required: true, message: '请输入书籍描述', trigger: 'blur'}\r\n        // ],\r\n        // publishDate: [\r\n        //   {required: true, message: '请选择书籍出版日期', trigger: 'blur'}\r\n        // ],\r\n        // author: [\r\n        //   {required: true, message: '请输入书籍作者', trigger: 'blur'}\r\n        // ],\r\n        // publish: [\r\n        //   {required: true, message: '请输入书籍出版社', trigger: 'blur'}\r\n        // ],\r\n        // categories: [\r\n        //   {required: true, message: '请选择书籍分类', trigger: 'blur'}\r\n        // ],\r\n        bookNumber: [\r\n          {required: true, message: '请输入书籍标准码', trigger: 'blur'}\r\n        ],\r\n        nums: [\r\n          {required: true, message: '请输入书籍数量', trigger: 'blur'}\r\n        ],\r\n        // cover: [\r\n        //   {required: true, message: '请输入书籍封面', trigger: 'blur'}\r\n        // ],\r\n        score: [\r\n          {required: true, message: '请输入书籍积分', trigger: 'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    checkAdmin()\r\n    console.log(this.getAdminToken)\r\n    request.get('/book/tree', {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + this.getAdminToken,\r\n        'token': this.getAdminToken,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => {\r\n      console.log(res)\r\n      this.categories = res.data\r\n    })\r\n  },\r\n  methods: {\r\n    save() {\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if (valid) {\r\n          request.post('/book/save', this.form).then(res => {\r\n            console.log(this.form)\r\n            if (res.code === 200) {\r\n              this.$notify.success('新增成功');\r\n              this.$refs['ruleForm'].resetFields();\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleCoverSuccess(res) {\r\n      if(res.code === 200) {\r\n        this.$set(this.form, 'cover', res.data)\r\n      }\r\n    },\r\n    handleChange(file, fileList) { //文件数量改变\r\n      this.fileList = fileList;\r\n    },\r\n\r\n    confirmUpload() { //确认上传\r\n      var param = new FormData();\r\n      this.fileList.forEach(\r\n          (val, index) => {\r\n            param.append(\"file\", val.raw);\r\n          }\r\n      );\r\n      request.post(\"/book/upload\", param).then(res => {\r\n        if (res.code === 200) {\r\n          console.log(res)\r\n        }\r\n      })\r\n\r\n      this.$message({\r\n        message: \"上传成功！\",\r\n        duration: 1000\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":"AA6DA,OAAAA,OAAA;AACA,SAAAC,UAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA,MAAAC,KAAA,GAAAC,YAAA,CAAAC,OAAA;IACA;MACAC,cAAA;MACAC,QAAA;MACAC,aAAA,EAAAJ,YAAA,CAAAC,OAAA;MACAI,OAAA;QACA,SAAAN,KAAA;QACA,6BAAAA,KAAA;QACA;MACA;MACAO,IAAA;QACAC,KAAA;QACAC,IAAA;MACA;MACAC,UAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC,UAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,IAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA;QACA;QACA;QACAP,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACArB,UAAA;IACAsB,OAAA,CAAAC,GAAA,MAAAd,aAAA;IACAV,OAAA,CAAAyB,GAAA;MACAd,OAAA;QACA,kCAAAD,aAAA;QACA,cAAAA,aAAA;QACA;MACA;IACA,GAAAgB,IAAA,CAAAC,GAAA;MACAJ,OAAA,CAAAC,GAAA,CAAAG,GAAA;MACA,KAAAZ,UAAA,GAAAY,GAAA,CAAAvB,IAAA;IACA;EACA;EACAwB,OAAA;IACAC,KAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAhC,OAAA,CAAAiC,IAAA,oBAAArB,IAAA,EAAAc,IAAA,CAAAC,GAAA;YACAJ,OAAA,CAAAC,GAAA,MAAAZ,IAAA;YACA,IAAAe,GAAA,CAAAO,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;cACA,KAAAN,KAAA,aAAAO,WAAA;YACA;cACA,KAAAF,OAAA,CAAAG,KAAA,CAAAX,GAAA,CAAAY,GAAA;YACA;UACA;QACA;MACA;IACA;IACAC,mBAAAb,GAAA;MACA,IAAAA,GAAA,CAAAO,IAAA;QACA,KAAAO,IAAA,MAAA7B,IAAA,WAAAe,GAAA,CAAAvB,IAAA;MACA;IACA;IACAsC,aAAAC,IAAA,EAAAlC,QAAA;MAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;IACA;IAEAmC,cAAA;MAAA;MACA,IAAAC,KAAA,OAAAC,QAAA;MACA,KAAArC,QAAA,CAAAsC,OAAA,CACA,CAAAC,GAAA,EAAAC,KAAA;QACAJ,KAAA,CAAAK,MAAA,SAAAF,GAAA,CAAAG,GAAA;MACA,CACA;MACAnD,OAAA,CAAAiC,IAAA,iBAAAY,KAAA,EAAAnB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAO,IAAA;UACAX,OAAA,CAAAC,GAAA,CAAAG,GAAA;QACA;MACA;MAEA,KAAAyB,QAAA;QACAjC,OAAA;QACAkC,QAAA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}