{"ast":null,"code":"import axios from \"axios\";\nconst request = axios.create({\n  baseURL: 'http://localhost:9090',\n  timeout: 5000\n});\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n  // config.headers['token'] = user.token; //设置请求头\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(response => {\n  let res = response.data;\n  // 兼容服务端返回的字符串数据\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n  return res;\n}, error => {\n  console.log('err' + error); // for debug\n  return Promise.reject(error);\n});\n$.ajax({\n  url: \"/api/student/poststudent\",\n  type: 'POST',\n  data: JSON.stringify({\n    name: \"张三\",\n    age: 21\n  }),\n  success: function () {},\n  dataType: \"json\",\n  contentType: \"application/json\"\n});\nexport default request;","map":{"version":3,"names":["axios","request","create","baseURL","timeout","interceptors","use","config","headers","error","Promise","reject","response","res","data","JSON","parse","console","log","$","ajax","url","type","stringify","name","age","success","dataType","contentType"],"sources":["F:/Vue/library-management/vue/src/utils/request.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst request = axios.create({\r\n    baseURL: 'http://localhost:9090',\r\n    timeout: 5000\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n\r\n    // config.headers['token'] = user.token; //设置请求头\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.log('err' + error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n$.ajax({\r\n    url: \"/api/student/poststudent\",\r\n    type: 'POST',\r\n    data:JSON.stringify({ name: \"张三\", age: 21 }),\r\n    success:function () {\r\n    },\r\n    dataType: \"json\",\r\n    contentType: \"application/json\"\r\n});\r\nexport default request"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA;AACA;AACAH,OAAO,CAACI,YAAY,CAACJ,OAAO,CAACK,GAAG,CAACC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;;EAEjE;EACA,OAAOD,MAAM;AACjB,CAAC,EAAEE,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA;AACAR,OAAO,CAACI,YAAY,CAACO,QAAQ,CAACN,GAAG,CAC7BM,QAAQ,IAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACvB;EACA,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IACzBA,GAAG,GAAGA,GAAG,GAAGE,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC,GAAGA,GAAG;EACrC;EACA,OAAOA,GAAG;AACd,CAAC,EACDJ,KAAK,IAAI;EACLQ,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGT,KAAK,CAAC,EAAC;EAC3B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AACDU,CAAC,CAACC,IAAI,CAAC;EACHC,GAAG,EAAE,0BAA0B;EAC/BC,IAAI,EAAE,MAAM;EACZR,IAAI,EAACC,IAAI,CAACQ,SAAS,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAG,CAAC,CAAC;EAC5CC,OAAO,EAAC,SAAAA,CAAA,EAAY,CACpB,CAAC;EACDC,QAAQ,EAAE,MAAM;EAChBC,WAAW,EAAE;AACjB,CAAC,CAAC;AACF,eAAe3B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}