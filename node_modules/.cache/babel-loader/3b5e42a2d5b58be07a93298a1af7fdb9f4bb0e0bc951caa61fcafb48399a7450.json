{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nimport { setToken } from \"@/utils/auth\";\nimport Cookies from \"js-cookie\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      admin: {},\n      loginAdmin: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在3-10个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在3-10个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      this.$refs['loginForm'].validate(valid => {\n        if (valid) {\n          request.post('/login', this.admin).then(res => {\n            // console.log(\"test\")\n            if (res.code === 200) {\n              // 弹出滑块组件并将后端返回的数据赋值给loginAdmin\n              this.loginAdmin = res.data;\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    // 滑块验证成功后\n    onSuccess() {\n      console.log('onSuccess');\n      let json;\n      if (this.loginAdmin !== null) {\n        localStorage.setItem(\"token\", this.loginAdmin.token);\n        setToken(this.loginAdmin.token);\n        json = {\n          \"id\": Number(this.loginAdmin.id),\n          \"username\": this.loginAdmin.username,\n          \"phone\": this.loginAdmin.phone,\n          \"email\": this.loginAdmin.email\n        };\n        Cookies.set(\"admin\", JSON.stringify(json));\n      }\n      console.log(\"login\");\n      this.$notify.success(\"登录成功\");\n      this.$router.push('/');\n    },\n    onFail() {\n      console.log('onFail');\n    },\n    onRefresh() {\n      console.log('onRefresh');\n    },\n    esc() {\n      this.loginAdmin = {};\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["request","setToken","Cookies","name","data","admin","loginAdmin","rules","username","required","message","trigger","min","max","password","methods","login","$refs","validate","valid","post","then","res","code","$notify","error","msg","onSuccess","console","log","json","localStorage","setItem","token","Number","id","phone","email","set","JSON","stringify","success","$router","push","onFail","onRefresh","esc"],"sources":["src/views/login/Login.vue"],"sourcesContent":["<template>\r\n\r\n  <div style=\"height: 100vh; overflow: hidden; position: relative\">\r\n    <el-card class=\"cover\" v-if=\"loginAdmin.id\">\r\n      <div prefix-icon=\"el-icon-user\" style=\"text-align: right\">x</div>\r\n      <slide-verify :l=\"42\"\r\n                    :r=\"10\"\r\n                    :w=\"310\"\r\n                    :h=\"155\"\r\n                    slider-text=\"向右滑动\"\r\n                    @success=\"onSuccess\"\r\n                    @fail=\"onFail\"\r\n                    @refresh=\"onRefresh\"\r\n      ></slide-verify>\r\n    </el-card>\r\n\r\n    <div\r\n        style=\"width: 500px; height: 400px; background-color: white; border-radius: 10px;margin: 150px auto; padding: 40px 50px\">\r\n      <div style=\"margin: 30px; text-align: center;font-size: 30px; font-weight: bold; color: dodgerblue\">登录</div>\r\n      <el-form :model=\"admin\" ref=\"loginForm\" :rules=\"rules\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input placeholder=\"请输入账号\" prefix-icon=\"el-icon-user\" size=\"medium\" v-model=\"admin.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input placeholder=\"请输入密码\" show-password prefix-icon=\"el-icon-user\" size=\"medium\"\r\n                    v-model=\"admin.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%\" size=\"medium\" type=\"primary\" @click=\"login\">Login</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport {setToken} from \"@/utils/auth\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      admin: {},\r\n      loginAdmin: {},\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '长度在3-10个字符', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '长度在3-10个字符', trigger: 'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$refs['loginForm'].validate((valid) => {\r\n        if (valid) {\r\n          request.post('/login', this.admin).then(res => {\r\n            // console.log(\"test\")\r\n            if (res.code === 200) {\r\n              // 弹出滑块组件并将后端返回的数据赋值给loginAdmin\r\n              this.loginAdmin = res.data\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 滑块验证成功后\r\n    onSuccess() {\r\n      console.log('onSuccess')\r\n      let json;\r\n      if (this.loginAdmin !== null) {\r\n        localStorage.setItem(\"token\", this.loginAdmin.token)\r\n        setToken(this.loginAdmin.token)\r\n        json = {\r\n          \"id\": Number(this.loginAdmin.id),\r\n          \"username\": this.loginAdmin.username,\r\n          \"phone\": this.loginAdmin.phone,\r\n          \"email\": this.loginAdmin.email\r\n        }\r\n        Cookies.set(\"admin\", JSON.stringify(json))\r\n      }\r\n      console.log(\"login\")\r\n      this.$notify.success(\"登录成功\")\r\n      this.$router.push('/')\r\n    },\r\n    onFail() {\r\n      console.log('onFail')\r\n    },\r\n    onRefresh() {\r\n      console.log('onRefresh')\r\n    },\r\n    esc() {\r\n      this.loginAdmin = {}\r\n      this.$router.push('/')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.cover{\r\n  width: fit-content;\r\n  background-color: white;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1000;\r\n}\r\n</style>"],"mappings":";AAoCA,OAAAA,OAAA;AACA,SAAAC,QAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,UAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,QAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,cAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAnB,OAAA,CAAAoB,IAAA,gBAAAf,KAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA;cACA,KAAAjB,UAAA,GAAAgB,GAAA,CAAAlB,IAAA;YACA;cACA,KAAAoB,OAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAC,UAAA;MACAC,OAAA,CAAAC,GAAA;MACA,IAAAC,IAAA;MACA,SAAAxB,UAAA;QACAyB,YAAA,CAAAC,OAAA,eAAA1B,UAAA,CAAA2B,KAAA;QACAhC,QAAA,MAAAK,UAAA,CAAA2B,KAAA;QACAH,IAAA;UACA,MAAAI,MAAA,MAAA5B,UAAA,CAAA6B,EAAA;UACA,iBAAA7B,UAAA,CAAAE,QAAA;UACA,cAAAF,UAAA,CAAA8B,KAAA;UACA,cAAA9B,UAAA,CAAA+B;QACA;QACAnC,OAAA,CAAAoC,GAAA,UAAAC,IAAA,CAAAC,SAAA,CAAAV,IAAA;MACA;MACAF,OAAA,CAAAC,GAAA;MACA,KAAAL,OAAA,CAAAiB,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,OAAA;MACAhB,OAAA,CAAAC,GAAA;IACA;IACAgB,UAAA;MACAjB,OAAA,CAAAC,GAAA;IACA;IACAiB,IAAA;MACA,KAAAxC,UAAA;MACA,KAAAoC,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}